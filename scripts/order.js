document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('order-form');
  const BOT_TOKEN = '7865197370:AAEzaD6VKlIcXAnYOd4fpsM3WuSH-II1VDw';
  const CHAT_ID = '7865197370';

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
  const canvas = new fabric.Canvas('design-preview');
  const savedDesign = localStorage.getItem('glassDesign');

  if (savedDesign) {
    const design = JSON.parse(savedDesign);

    // –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ–∫–∞–ª–∞
    fabric.Image.fromURL(`images/${design.glassType}-glass.png`, function(img) {
      img.scaleToWidth(300);
      canvas.add(img);

      // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞
      if (design.text) {
        const text = new fabric.Text(design.text, {
          fontFamily: design.font,
          fontSize: 20,
          fill: '#000000',
          left: 150,
          top: 150,
          originX: 'center',
          originY: 'center'
        });
        canvas.add(text);
      }

      // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      if (design.image) {
        fabric.Image.fromURL(`images/${design.image}`, function(img) {
          img.set({
            scaleX: 0.3,
            scaleY: 0.3,
            left: 100,
            top: 100,
            originX: 'center',
            originY: 'center'
          });
          canvas.add(img);
        });
      }
    });
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞
  form.addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = {
      name: form.elements.name.value,
      phone: form.elements.phone.value,
      social: form.elements.social.value,
      address: form.elements.address.value,
      comments: form.elements.comments.value,
      design: savedDesign ? JSON.parse(savedDesign) : null,
      date: new Date().toLocaleString()
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑* \n\n` +
                   `üë§ *–ò–º—è*: ${formData.name}\n` +
                   `üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: ${formData.phone}\n` +
                   `üí¨ *–°–æ—Ü—Å–µ—Ç—å*: ${formData.social}\n` +
                   `üè† *–ê–¥—Ä–µ—Å*: ${formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                   `üí≠ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π*: ${formData.comments || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}\n\n` +
                   `üõí *–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞*:\n` +
                   `- –ë–æ–∫–∞–ª: ${formData.design?.glassType || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                   `- –¢–µ–∫—Å—Ç: ${formData.design?.text || '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞'}\n` +
                   `- –®—Ä–∏—Ñ—Ç: ${formData.design?.font || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n` +
                   `- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${formData.design?.image ? '–î–∞' : '–ù–µ—Ç'}\n\n` +
                   `‚è∞ *–î–∞—Ç–∞*: ${formData.date}`;

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
      const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: message,
          parse_mode: 'Markdown'
        })
      });

      if (response.ok) {
        alert('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        form.reset();
        localStorage.removeItem('glassDesign');
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
    }
  });
});